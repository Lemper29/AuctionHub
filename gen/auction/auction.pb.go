// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: auction/auction.proto

package auction

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Lot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	StartPrice    float64                `protobuf:"fixed64,4,opt,name=startPrice,proto3" json:"startPrice,omitempty"`
	CurrentPrice  float64                `protobuf:"fixed64,5,opt,name=currentPrice,proto3" json:"currentPrice,omitempty"`
	CurrentWinner string                 `protobuf:"bytes,6,opt,name=currentWinner,proto3" json:"currentWinner,omitempty"`
	Status        string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	EndTimeUnix   int64                  `protobuf:"varint,8,opt,name=end_time_unix,json=endTimeUnix,proto3" json:"end_time_unix,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Lot) Reset() {
	*x = Lot{}
	mi := &file_auction_auction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lot) ProtoMessage() {}

func (x *Lot) ProtoReflect() protoreflect.Message {
	mi := &file_auction_auction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lot.ProtoReflect.Descriptor instead.
func (*Lot) Descriptor() ([]byte, []int) {
	return file_auction_auction_proto_rawDescGZIP(), []int{0}
}

func (x *Lot) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Lot) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lot) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Lot) GetStartPrice() float64 {
	if x != nil {
		return x.StartPrice
	}
	return 0
}

func (x *Lot) GetCurrentPrice() float64 {
	if x != nil {
		return x.CurrentPrice
	}
	return 0
}

func (x *Lot) GetCurrentWinner() string {
	if x != nil {
		return x.CurrentWinner
	}
	return ""
}

func (x *Lot) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Lot) GetEndTimeUnix() int64 {
	if x != nil {
		return x.EndTimeUnix
	}
	return 0
}

// Сообщения для CRUD операций с лотами
type CreateLotRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description    string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	StartPrice     float64                `protobuf:"fixed64,3,opt,name=startPrice,proto3" json:"startPrice,omitempty"`
	DurationMinute int64                  `protobuf:"varint,4,opt,name=durationMinute,proto3" json:"durationMinute,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateLotRequest) Reset() {
	*x = CreateLotRequest{}
	mi := &file_auction_auction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLotRequest) ProtoMessage() {}

func (x *CreateLotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auction_auction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLotRequest.ProtoReflect.Descriptor instead.
func (*CreateLotRequest) Descriptor() ([]byte, []int) {
	return file_auction_auction_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLotRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLotRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateLotRequest) GetStartPrice() float64 {
	if x != nil {
		return x.StartPrice
	}
	return 0
}

func (x *CreateLotRequest) GetDurationMinute() int64 {
	if x != nil {
		return x.DurationMinute
	}
	return 0
}

type CreateLotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lot           *Lot                   `protobuf:"bytes,1,opt,name=lot,proto3" json:"lot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateLotResponse) Reset() {
	*x = CreateLotResponse{}
	mi := &file_auction_auction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateLotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLotResponse) ProtoMessage() {}

func (x *CreateLotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auction_auction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLotResponse.ProtoReflect.Descriptor instead.
func (*CreateLotResponse) Descriptor() ([]byte, []int) {
	return file_auction_auction_proto_rawDescGZIP(), []int{2}
}

func (x *CreateLotResponse) GetLot() *Lot {
	if x != nil {
		return x.Lot
	}
	return nil
}

type GetLotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LotId         string                 `protobuf:"bytes,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLotRequest) Reset() {
	*x = GetLotRequest{}
	mi := &file_auction_auction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLotRequest) ProtoMessage() {}

func (x *GetLotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auction_auction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLotRequest.ProtoReflect.Descriptor instead.
func (*GetLotRequest) Descriptor() ([]byte, []int) {
	return file_auction_auction_proto_rawDescGZIP(), []int{3}
}

func (x *GetLotRequest) GetLotId() string {
	if x != nil {
		return x.LotId
	}
	return ""
}

type GetLotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lot           *Lot                   `protobuf:"bytes,1,opt,name=lot,proto3" json:"lot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLotResponse) Reset() {
	*x = GetLotResponse{}
	mi := &file_auction_auction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLotResponse) ProtoMessage() {}

func (x *GetLotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auction_auction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLotResponse.ProtoReflect.Descriptor instead.
func (*GetLotResponse) Descriptor() ([]byte, []int) {
	return file_auction_auction_proto_rawDescGZIP(), []int{4}
}

func (x *GetLotResponse) GetLot() *Lot {
	if x != nil {
		return x.Lot
	}
	return nil
}

// Сообщение для размещения ставки
type PlaceBidRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LotId         string                 `protobuf:"bytes,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Amount        float64                `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaceBidRequest) Reset() {
	*x = PlaceBidRequest{}
	mi := &file_auction_auction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceBidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceBidRequest) ProtoMessage() {}

func (x *PlaceBidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auction_auction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceBidRequest.ProtoReflect.Descriptor instead.
func (*PlaceBidRequest) Descriptor() ([]byte, []int) {
	return file_auction_auction_proto_rawDescGZIP(), []int{5}
}

func (x *PlaceBidRequest) GetLotId() string {
	if x != nil {
		return x.LotId
	}
	return ""
}

func (x *PlaceBidRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PlaceBidRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type PlaceBidResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UpdatedLot    *Lot                   `protobuf:"bytes,3,opt,name=updated_lot,json=updatedLot,proto3" json:"updated_lot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaceBidResponse) Reset() {
	*x = PlaceBidResponse{}
	mi := &file_auction_auction_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceBidResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceBidResponse) ProtoMessage() {}

func (x *PlaceBidResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auction_auction_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceBidResponse.ProtoReflect.Descriptor instead.
func (*PlaceBidResponse) Descriptor() ([]byte, []int) {
	return file_auction_auction_proto_rawDescGZIP(), []int{6}
}

func (x *PlaceBidResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PlaceBidResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PlaceBidResponse) GetUpdatedLot() *Lot {
	if x != nil {
		return x.UpdatedLot
	}
	return nil
}

// Сообщения остаются без изменений
type SubscribeToLotRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LotId         string                 `protobuf:"bytes,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToLotRequest) Reset() {
	*x = SubscribeToLotRequest{}
	mi := &file_auction_auction_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToLotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToLotRequest) ProtoMessage() {}

func (x *SubscribeToLotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auction_auction_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToLotRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToLotRequest) Descriptor() ([]byte, []int) {
	return file_auction_auction_proto_rawDescGZIP(), []int{7}
}

func (x *SubscribeToLotRequest) GetLotId() string {
	if x != nil {
		return x.LotId
	}
	return ""
}

type SubscribeToLotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Lot           *Lot                   `protobuf:"bytes,1,opt,name=lot,proto3" json:"lot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToLotResponse) Reset() {
	*x = SubscribeToLotResponse{}
	mi := &file_auction_auction_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToLotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToLotResponse) ProtoMessage() {}

func (x *SubscribeToLotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auction_auction_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToLotResponse.ProtoReflect.Descriptor instead.
func (*SubscribeToLotResponse) Descriptor() ([]byte, []int) {
	return file_auction_auction_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribeToLotResponse) GetLot() *Lot {
	if x != nil {
		return x.Lot
	}
	return nil
}

var File_auction_auction_proto protoreflect.FileDescriptor

const file_auction_auction_proto_rawDesc = "" +
	"\n" +
	"\x15auction/auction.proto\x12\aauction\x1a\x1cgoogle/api/annotations.proto\"\xf1\x01\n" +
	"\x03Lot\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"startPrice\x18\x04 \x01(\x01R\n" +
	"startPrice\x12\"\n" +
	"\fcurrentPrice\x18\x05 \x01(\x01R\fcurrentPrice\x12$\n" +
	"\rcurrentWinner\x18\x06 \x01(\tR\rcurrentWinner\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\x12\"\n" +
	"\rend_time_unix\x18\b \x01(\x03R\vendTimeUnix\"\x90\x01\n" +
	"\x10CreateLotRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"startPrice\x18\x03 \x01(\x01R\n" +
	"startPrice\x12&\n" +
	"\x0edurationMinute\x18\x04 \x01(\x03R\x0edurationMinute\"3\n" +
	"\x11CreateLotResponse\x12\x1e\n" +
	"\x03lot\x18\x01 \x01(\v2\f.auction.LotR\x03lot\"&\n" +
	"\rGetLotRequest\x12\x15\n" +
	"\x06lot_id\x18\x01 \x01(\tR\x05lotId\"0\n" +
	"\x0eGetLotResponse\x12\x1e\n" +
	"\x03lot\x18\x01 \x01(\v2\f.auction.LotR\x03lot\"Y\n" +
	"\x0fPlaceBidRequest\x12\x15\n" +
	"\x06lot_id\x18\x01 \x01(\tR\x05lotId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x01R\x06amount\"u\n" +
	"\x10PlaceBidResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12-\n" +
	"\vupdated_lot\x18\x03 \x01(\v2\f.auction.LotR\n" +
	"updatedLot\".\n" +
	"\x15SubscribeToLotRequest\x12\x15\n" +
	"\x06lot_id\x18\x01 \x01(\tR\x05lotId\"8\n" +
	"\x16SubscribeToLotResponse\x12\x1e\n" +
	"\x03lot\x18\x01 \x01(\v2\f.auction.LotR\x03lot2\xad\x03\n" +
	"\x0eAuctionService\x12[\n" +
	"\tCreateLot\x12\x19.auction.CreateLotRequest\x1a\x1a.auction.CreateLotResponse\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/api/v1/lots\x12X\n" +
	"\x06GetLot\x12\x16.auction.GetLotRequest\x1a\x17.auction.GetLotResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/lots/{lot_id}\x12f\n" +
	"\bPlaceBid\x12\x18.auction.PlaceBidRequest\x1a\x19.auction.PlaceBidResponse\"%\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/api/v1/lots/{lot_id}/bids\x12|\n" +
	"\x0eSubscribeToLot\x12\x1e.auction.SubscribeToLotRequest\x1a\x1f.auction.SubscribeToLotResponse\"'\x82\xd3\xe4\x93\x02!\x12\x1f/api/v1/lots/{lot_id}/subscribe0\x01B&Z$github.com/auctiongithub/gen/auctionb\x06proto3"

var (
	file_auction_auction_proto_rawDescOnce sync.Once
	file_auction_auction_proto_rawDescData []byte
)

func file_auction_auction_proto_rawDescGZIP() []byte {
	file_auction_auction_proto_rawDescOnce.Do(func() {
		file_auction_auction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_auction_auction_proto_rawDesc), len(file_auction_auction_proto_rawDesc)))
	})
	return file_auction_auction_proto_rawDescData
}

var file_auction_auction_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_auction_auction_proto_goTypes = []any{
	(*Lot)(nil),                    // 0: auction.Lot
	(*CreateLotRequest)(nil),       // 1: auction.CreateLotRequest
	(*CreateLotResponse)(nil),      // 2: auction.CreateLotResponse
	(*GetLotRequest)(nil),          // 3: auction.GetLotRequest
	(*GetLotResponse)(nil),         // 4: auction.GetLotResponse
	(*PlaceBidRequest)(nil),        // 5: auction.PlaceBidRequest
	(*PlaceBidResponse)(nil),       // 6: auction.PlaceBidResponse
	(*SubscribeToLotRequest)(nil),  // 7: auction.SubscribeToLotRequest
	(*SubscribeToLotResponse)(nil), // 8: auction.SubscribeToLotResponse
}
var file_auction_auction_proto_depIdxs = []int32{
	0, // 0: auction.CreateLotResponse.lot:type_name -> auction.Lot
	0, // 1: auction.GetLotResponse.lot:type_name -> auction.Lot
	0, // 2: auction.PlaceBidResponse.updated_lot:type_name -> auction.Lot
	0, // 3: auction.SubscribeToLotResponse.lot:type_name -> auction.Lot
	1, // 4: auction.AuctionService.CreateLot:input_type -> auction.CreateLotRequest
	3, // 5: auction.AuctionService.GetLot:input_type -> auction.GetLotRequest
	5, // 6: auction.AuctionService.PlaceBid:input_type -> auction.PlaceBidRequest
	7, // 7: auction.AuctionService.SubscribeToLot:input_type -> auction.SubscribeToLotRequest
	2, // 8: auction.AuctionService.CreateLot:output_type -> auction.CreateLotResponse
	4, // 9: auction.AuctionService.GetLot:output_type -> auction.GetLotResponse
	6, // 10: auction.AuctionService.PlaceBid:output_type -> auction.PlaceBidResponse
	8, // 11: auction.AuctionService.SubscribeToLot:output_type -> auction.SubscribeToLotResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_auction_auction_proto_init() }
func file_auction_auction_proto_init() {
	if File_auction_auction_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_auction_auction_proto_rawDesc), len(file_auction_auction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auction_auction_proto_goTypes,
		DependencyIndexes: file_auction_auction_proto_depIdxs,
		MessageInfos:      file_auction_auction_proto_msgTypes,
	}.Build()
	File_auction_auction_proto = out.File
	file_auction_auction_proto_goTypes = nil
	file_auction_auction_proto_depIdxs = nil
}
